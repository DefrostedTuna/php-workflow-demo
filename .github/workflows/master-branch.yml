name: Master Workflow

on:
  push:
    branches:
      - master
  
jobs:
  unit-tests:
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    name: Run Unit Tests
    runs-on: ubuntu-latest
    container:
      image: php:7.3-alpine3.13
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install Composer
      run: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

    - name: Install Dependencies
      run: composer install --no-interaction --no-suggest

    - name: Run Unit Tests
      run: |
        php artisan key:generate --env=testing
        vendor/bin/phpunit
        
  # We only want to build the master branch if there is a release.
  # This is so that we capture the updated changelog after a release has been made.
  # Building an image before a release will result in duplicate images with minor differences.
  build-image:
    if: "contains(github.event.head_commit.message, 'chore(release):') && !contains(github.event.head_commit.message, '[skip-ci]')"
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: unit-tests
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Authenticate with Docker Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login ${{ secrets.DOCKER_SERVER }} -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Container
        run: docker build -t ${{ secrets.DOCKER_SERVER }}/defrostedtuna/php-workflow-demo:$(echo $GITHUB_REF | awk -F "/" '{print $3}')-$(echo $GITHUB_SHA | cut -c -7) .

      - name: Push Container
        run: docker push ${{ secrets.DOCKER_SERVER }}/defrostedtuna/php-workflow-demo:$(echo $GITHUB_REF | awk -F "/" '{print $3}')-$(echo $GITHUB_SHA | cut -c -7)

  # We want to release every commit that is pushed to the master branch.
  # As part of a release, a changelog is updated and pushed to master.
  # When this changelog is pushed to master, we DO NOT want to trigger
  # another release automatically. We want to ignore this commit specifically.
  create-release:
    if: "!contains(github.event.head_commit.message, 'chore(release):') && !contains(github.event.head_commit.message, '[skip-ci]')"
    name: Create Release
    runs-on: ubuntu-latest
    needs: unit-tests
    container:
      image: node:15-alpine3.12
    steps: 
      # Dependencies need to be installed before checking out the code
      # so that the .git folder is cloned along with the repository.
      - name: Install Dependencies
        run: |
          apk add --no-cache git openssh
          yarn global add standard-version
          git config --global user.name "Github Actions"
          git config --global user.email github-actions@github.com

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.SSH_DEPLOY_KEY }}
          fetch-depth: 0 # This will allow the fetching of tags from the history for versioning.

      - name: Create Release
        run: | 
          git config user.name "Github Actions"
          git config user.email github-actions@github.com
          standard-version -t ""
          git push --follow-tags origin master