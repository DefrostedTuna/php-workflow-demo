name: Master Branch Workflow

on:
  push:
    branches:
      - master
  
jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    container:
      image: php:7.3-alpine3.13
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install Composer
      run: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

    - name: Install Dependencies
      run: composer install --no-interaction --no-suggest

    - name: Run Unit Tests
      run: |
        php artisan key:generate --env=testing
        vendor/bin/phpunit

  # Build `master` ONLY if it is a release.
  # When code is merged into `master`, it will ALWAYS trigger a release.
  # We want to build the branch after the release has been made so that it
  # includes the changelog generated by the release as well.
  build-branch:
    if: contains(github.event.head_commit.message, 'chore(release):')
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: unit-tests
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Authenticate with Docker Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login ${{ secrets.DOCKER_SERVER }} -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Container
        run: docker build -t ${{ secrets.DOCKER_SERVER }}/defrostedtuna/php-workflow-demo:$(echo $GITHUB_REF | awk -F "/" '{print $3}')-$(echo $GITHUB_SHA | cut -c -7) .

      - name: Push Container
        run: docker push ${{ secrets.DOCKER_SERVER }}/defrostedtuna/php-workflow-demo:$(echo $GITHUB_REF | awk -F "/" '{print $3}')-$(echo $GITHUB_SHA | cut -c -7)

  # This will only run on the `master` branch when the commit does not mention release.
  create-release:
    if: !contains(github.event.head_commit.message, 'chore(release):')
    name: Create Release
    runs-on: ubuntu-latest
    needs: unit-tests
    container:
      image: node:15-alpine3.12
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v2
      
      - name: Install standard-version
        run: yarn global add standard-version

      - name: Create Release
        run: standard-version -t ""

      - name: Publish Release
        run: git push --follow-tags origin master